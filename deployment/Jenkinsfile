pipeline {
    agent any
    
    environment {
        // Define credentials ID that you'll set up in Jenkins
        DOCKERHUB_CREDENTIALS = credentials('DockerHub_creds')
        
        // Define your DockerHub username and repository names
        DOCKERHUB_USERNAME = 'idanpersi'
        BACKEND_REPO = 'gitops_backend'
        FRONTEND_REPO = 'gitops_frontend'
        
        // Define image tags using the build number for versioning
        TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                // This will clone your GitHub repository
                checkout scm
            }
        }
        
        stage('Backend Tests') {
            steps {
                dir('backend') {  // Change directory to backend folder
                    script {
                        // Build a temporary image for testing
                        sh '''
                            docker build -t backend-test .
                            # Add your test command here, for example:
                            docker run --rm backend-test npm test
                        '''
                    }
                }
            }
        }
        
        stage('Frontend Tests') {
            steps {
                dir('frontend') {  // Change directory to frontend folder
                    script {
                        // Build a temporary image for testing
                        sh '''
                            docker build -t frontend-test .
                            # Add your test command here, for example:
                            docker run --rm frontend-test npm test
                        '''
                    }
                }
            }
        }
        
        stage('Build Images') {
            steps {
                script {
                    // Build backend image
                    sh """
                        cd backend
                        docker build -t ${DOCKERHUB_USERNAME}/${BACKEND_REPO}:${TAG} .
                        docker tag ${DOCKERHUB_USERNAME}/${BACKEND_REPO}:${TAG} ${DOCKERHUB_USERNAME}/${BACKEND_REPO}:latest
                        cd ..
                    """
                    
                    // Build frontend image
                    sh """
                        cd frontend
                        docker build -t ${DOCKERHUB_USERNAME}/${FRONTEND_REPO}:${TAG} .
                        docker tag ${DOCKERHUB_USERNAME}/${FRONTEND_REPO}:${TAG} ${DOCKERHUB_USERNAME}/${FRONTEND_REPO}:latest
                        cd ..
                    """
                }
            }
        }
        
        stage('Login to DockerHub') {
            steps {
                script {
                    // Log in to DockerHub using credentials
                    sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                }
            }
        }
        
        stage('Push Images') {
            steps {
                script {
                    // Push both version-tagged and latest images for backend
                    sh """
                        docker push ${DOCKERHUB_USERNAME}/${BACKEND_REPO}:${TAG}
                        docker push ${DOCKERHUB_USERNAME}/${BACKEND_REPO}:latest
                    """
                    
                    // Push both version-tagged and latest images for frontend
                    sh """
                        docker push ${DOCKERHUB_USERNAME}/${FRONTEND_REPO}:${TAG}
                        docker push ${DOCKERHUB_USERNAME}/${FRONTEND_REPO}:latest
                    """
                }
            }
        }
        
        stage('Clean Up') {
            steps {
                script {
                    // Remove local images to free up space
                    sh """
                        docker rmi ${DOCKERHUB_USERNAME}/${BACKEND_REPO}:${TAG}
                        docker rmi ${DOCKERHUB_USERNAME}/${BACKEND_REPO}:latest
                        docker rmi ${DOCKERHUB_USERNAME}/${FRONTEND_REPO}:${TAG}
                        docker rmi ${DOCKERHUB_USERNAME}/${FRONTEND_REPO}:latest
                        docker rmi backend-test
                        docker rmi frontend-test
                    """
                    
                    // Log out from DockerHub
                    sh 'docker logout'
                }
            }
        }
    }
}
